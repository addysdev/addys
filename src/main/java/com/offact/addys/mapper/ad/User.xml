<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="User">

<resultMap id="userListVO" type="com.offact.addys.vo.ad.ADUserListManageVO" >
  <result column="USER_ID"                      property="userId"  />
  <result column="USER_NM"                      property="userNm"  />
  <result column="EMPLOYEE_NUMBER"              property="employeeNumber"  />
  <result column="USER_DEPT_CODE"               property="userDeptCode"  />
  <result column="USER_GROUP_CODE"              property="userGroupCode"  />
  <result column="USER_DEPT_CODE_NM"            property="userDeptCodeNm"  />
  <result column="USER_GROUP_CODE_NM"           property="userGroupCodeNm"  />
  <result column="USING_YN"                     property="usingYn"  />
  <result column="LOGIN_YN"                     property="loginYn"  />
  <result column="AGENT_ID"                     property="agentId"  />
  <result column="INNER_NUM"                    property="innerNum"  />
  <result column="MANAGER_YN"                   property="managerYn"  />
  <result column="WORK_YN"                      property="workYn"  />
  <result column="COMPANY_GBN"                  property="companyGbn"  />
  <result column="CHARGE_BUSINESS_CODE"         property="chargeBusinessCode"  />
  <result column="TPLUS_CHARGE_BUSINESS_CODE"   property="tplusChargeBusinessCode"  />
  <result column="FRST_REG_TS"                  property="frstRegTs"  />
  <result column="FRST_REGR_ID"                 property="frstRegrId"  />
  <result column="LAST_MOD_TS"                  property="lastModTs"  />
  <result column="LAST_CORT_ID"                 property="lastCortId"  />
  <result column="PARTNER_CHARGE_YN"            property="partnerChargeYn"  />
  <result column="ASSIGN_CNT"                   property="assignCnt"  />
  <result column="TRANSFER_CNT"                 property="transferCnt"  />
  
</resultMap>

<resultMap id="transferVO" type="com.offact.addys.vo.ad.ADTransferHistoryVO" >
    <result column="TRANSFER_SNO"               property="transferSno" />
    <result column="CRT_NO"                     property="crtNo" />
    <result column="ORIGINAL_TRANSFER_SNO"      property="originalTransferSno" />
    <result column="OTHER_DEPT_TRANSFER_YN"     property="otherDeptTransferYn" />
    <result column="CUSTOMER_ID"                property="customerId" />
    <result column="CUSTOMER_NM"                property="customerNm" />
    <result column="PARTNER_ID"                 property="partnerId" />
    <result column="PARTNER_NM"                 property="partnerNm" />
    <result column="DEAL_ID"                    property="dealId" />
    <result column="DEAL_NM"                    property="dealNm" />
    <result column="ASSIGN_TIME"                property="assignTime" />
    <result column="COMPLETE_TIME"              property="completeTime" />
    <result column="ELAPSE_TIME"                property="elapseTime" />
    <result column="TOTAL_HANDLE_TIME"          property="totalHandleTime" />
    <result column="TRANSFER_RESULT_CODE"       property="transferResultCode" />
    <result column="TRANSFER_REG_USER_ID"       property="transferRegUserId" />
    <result column="TRANSFER_PROC_USER_ID"      property="transferProcUserId" />
    <result column="TRANSFER_REQ_TITLE"         property="transferReqTitle" />
    <result column="TRANSFER_TREAT_CONTENTS"    property="transferTreatContents" />
    <result column="URGENT_YN"                  property="urgentYn" />
    <result column="LAST_TRANSFER_SNO"          property="lastTransferSno" />
    <result column="LAST_TRANSFER_RESULT_CODE"  property="lastTransferResultCode" />
    <result column="FRST_REG_TS"                property="frstRegTs" />
    <result column="FRST_REGR_ID"               property="frstRegrId" />
    <result column="LAST_MOD_TS"                property="lastModTs" />
    <result column="LAST_CORT_ID"               property="lastCortId" />
</resultMap>

<select id="getUserListManage"  resultMap="userListVO" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
        SELECT USER_ID                                      AS USER_ID
              ,USER_NM                                      AS USER_NM
              ,EMPLOYEE_NUMBER                              AS EMPLOYEE_NUMBER
              ,USER_DEPT_CODE                               AS USER_DEPT_CODE
              ,USER_GROUP_CODE                              AS USER_GROUP_CODE
              ,fnGetCodeName('IG10',USER_DEPT_CODE)         AS USER_DEPT_CODE_NM
              ,fnGetCodeName('IG11',USER_GROUP_CODE)        AS USER_GROUP_CODE_NM
              ,USING_YN                                     AS USING_YN
              ,LOGIN_YN                                     AS LOGIN_YN
              ,AGENT_ID                                     AS AGENT_ID
              ,INNER_NUM                                    AS INNER_NUM
              ,MANAGER_YN                                   AS MANAGER_YN
              ,(case when WORK_YN = 'Y' then 'Y' else 'N' end) AS WORK_YN
              ,fnGetCodeName('IG14',COMPANY_GBN)            AS COMPANY_GBN
              ,fnGetCodeName('IG12',CHARGE_BUSINESS_CODE)   AS CHARGE_BUSINESS_CODE
              ,FRST_REG_TS                                  AS FRST_REG_TS
              ,FRST_REGR_ID                                 AS FRST_REGR_ID
              ,LAST_MOD_TS                                  AS LAST_MOD_TS
              ,LAST_CORT_ID                                 AS LAST_CORT_ID
              ,(case when PARTNER_CHARGE_YN = 'Y' then 'Y' else 'N' end) AS PARTNER_CHARGE_YN
              ,0 as ASSIGN_CNT
              ,(SELECT COUNT(*) 
                  FROM TB_TRANSFER IT
                 WHERE IT.TRANSFER_PROC_USER_ID = A.USER_ID
                   AND IT.TRANSFER_RESULT_CODE != '06'
                   AND IT.FRST_REGR_ID != 'ADMIN'
                   AND IT.TRANSFER_SNO = IT.LAST_TRANSFER_SNO
               ) + 
               (SELECT COUNT(*) 
                  FROM TB_TRANSFER IT
                 WHERE IT.TRANSFER_REG_USER_ID = A.USER_ID
                   AND IT.TRANSFER_RESULT_CODE != '06'
                   AND IT.FRST_REGR_ID != 'ADMIN'
                   AND IT.TRANSFER_SNO = IT.LAST_TRANSFER_SNO
               ) AS TRANSFER_CNT
          FROM TB_USER A
         WHERE 1=1
           <if test="con_userGroupCode != null and con_userGroupCode != ''" >
           AND USER_GROUP_CODE = #{con_userGroupCode}
           </if>
           <if test="searchValue != null and searchValue != ''" >
             <choose>
               <when test="searchGubun.equals('01')">
           AND USER_NM  LIKE CONCAT('%', #{searchValue}, '%')
               </when>
               <when test="searchGubun.equals('02')">
           AND USER_ID  LIKE CONCAT('%', #{searchValue}, '%')
               </when>
             </choose>
           </if>
           <if test="con_usingYn != null and con_usingYn != ''" >
           AND USING_YN = #{con_usingYn}
           </if>
           <if test="con_companyGbnCode != null and con_companyGbnCode != ''" >
           AND COMPANY_GBN = #{con_companyGbnCode}
           </if>
           <if test="con_userDeptCode != null and con_userDeptCode != ''" >
           AND USER_DEPT_CODE = #{con_userDeptCode}
           </if>
         ORDER BY USER_ID
 LIMIT ${page_limit_val1} , ${page_limit_val2}
</select>



<select id="getSkillUserListManage"  resultMap="userListVO" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
SELECT B.*
  FROM (
        SELECT @ROWNUM := @ROWNUM + 1                       AS ROWNUM
              ,USER_ID                                      AS USER_ID
              ,USER_NM                                      AS USER_NM
              ,EMPLOYEE_NUMBER                              AS EMPLOYEE_NUMBER
              ,USER_DEPT_CODE                               AS USER_DEPT_CODE
              ,USER_GROUP_CODE                              AS USER_GROUP_CODE
              ,fnGetCodeName('IG10',USER_DEPT_CODE)         AS USER_DEPT_CODE_NM
              ,fnGetCodeName('IG11',USER_GROUP_CODE)        AS USER_GROUP_CODE_NM
              ,USING_YN                                     AS USING_YN
              ,LOGIN_YN                                     AS LOGIN_YN
              ,AGENT_ID                                     AS AGENT_ID
              ,INNER_NUM                                    AS INNER_NUM
              ,MANAGER_YN                                   AS MANAGER_YN
              ,(case when WORK_YN = 'Y' then 'Y' else 'N' end) AS WORK_YN
              ,fnGetCodeName('IG14',COMPANY_GBN)            AS COMPANY_GBN
              ,fnGetCodeName('IG12',CHARGE_BUSINESS_CODE)   AS CHARGE_BUSINESS_CODE
              ,FRST_REG_TS                                  AS FRST_REG_TS
              ,FRST_REGR_ID                                 AS FRST_REGR_ID
              ,LAST_MOD_TS                                  AS LAST_MOD_TS
              ,LAST_CORT_ID                                 AS LAST_CORT_ID
              ,(case when PARTNER_CHARGE_YN = 'Y' then 'Y' else 'N' end) AS PARTNER_CHARGE_YN
          FROM TB_USER A
              ,(SELECT @ROWNUM := 0) R
         WHERE 1=1
         and    A.USER_DEPT_CODE in (SELECT TB_SKILL.USER_DEPT_CODE FROM TB_SKILL GROUP BY TB_SKILL.USER_DEPT_CODE )
           <if test="con_userGroupCode != null and con_userGroupCode != ''" >
           AND USER_GROUP_CODE = #{con_userGroupCode}
           </if>
           <if test="searchValue != null and searchValue != ''" >
             <choose>
               <when test="searchGubun.equals('01')">
           AND USER_NM  LIKE CONCAT('%', #{searchValue}, '%')
               </when>
               <when test="searchGubun.equals('02')">
           AND USER_ID  LIKE CONCAT('%', #{searchValue}, '%')
               </when>
             </choose>
           </if>
           <if test="con_usingYn != null and con_usingYn != ''" >
           AND USING_YN = #{con_usingYn}
           </if>
           <if test="con_companyGbnCode != null and con_companyGbnCode != ''" >
           AND COMPANY_GBN = #{con_companyGbnCode}
           </if>
           <if test="con_userDeptCode != null and con_userDeptCode != ''" >
           AND USER_DEPT_CODE = #{con_userDeptCode}
           </if>
         ORDER BY USER_ID
       ) B
 WHERE B.ROWNUM BETWEEN (#{curPage}-1) * #{rowCount}+1 AND #{curPage} * #{rowCount}
</select>



<select id="getUserCnt" resultType="int">
SELECT COUNT(*) AS TOT_COUNT
  FROM TB_USER
 WHERE 1=1
  <if test="con_userGroupCode != null and con_userGroupCode != ''" >
   AND USER_GROUP_CODE = #{con_userGroupCode}
  </if>

  <if test="searchValue != null and searchValue != ''" >
    <choose>
      <when test="searchGubun.equals('01')">
   AND USER_NM  LIKE CONCAT('%', #{searchValue}, '%')
      </when>
      <when test="searchGubun.equals('02')">
   AND USER_ID  LIKE CONCAT('%', #{searchValue}, '%')
      </when>
    </choose>
  </if>
  <if test="con_usingYn != null and con_usingYn != ''" >
   AND USING_YN = #{con_usingYn}
  </if>
  <if test="con_companyGbnCode != null and con_companyGbnCode != ''" >
   AND COMPANY_GBN = #{con_companyGbnCode}
  </if>
  <if test="con_userDeptCode != null and con_userDeptCode != ''" >
   AND USER_DEPT_CODE = #{con_userDeptCode}
  </if>
</select>




<select id="getUserSkillCnt" resultType="int">
SELECT COUNT(*) AS TOT_COUNT
  FROM TB_USER
 WHERE 1=1
 and    USER_DEPT_CODE in (SELECT TB_SKILL.USER_DEPT_CODE FROM TB_SKILL GROUP BY TB_SKILL.USER_DEPT_CODE )
  <if test="con_userGroupCode != null and con_userGroupCode != ''" >
   AND USER_GROUP_CODE = #{con_userGroupCode}
  </if>

  <if test="searchValue != null and searchValue != ''" >
    <choose>
      <when test="searchGubun.equals('01')">
   AND USER_NM  LIKE CONCAT('%', #{searchValue}, '%')
      </when>
      <when test="searchGubun.equals('02')">
   AND USER_ID  LIKE CONCAT('%', #{searchValue}, '%')
      </when>
    </choose>
  </if>
  <if test="con_usingYn != null and con_usingYn != ''" >
   AND USING_YN = #{con_usingYn}
  </if>
  <if test="con_companyGbnCode != null and con_companyGbnCode != ''" >
   AND COMPANY_GBN = #{con_companyGbnCode}
  </if>
  <if test="con_userDeptCode != null and con_userDeptCode != ''" >
   AND USER_DEPT_CODE = #{con_userDeptCode}
  </if>
</select>


<update id="userUpdateProc" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
UPDATE TB_USER
   SET <!-- MANAGER_YN          = #{managerYn}
      , -->WORK_YN             = #{workYn}
<!-- 
      <if test="userDeptCode =='CS'" >
      ,COMPANY_GBN         = #{companyGbn}
      </if>
      <if test="userDeptCode !='CS'" >
      ,COMPANY_GBN         = null
      </if>
-->
      ,PARTNER_CHARGE_YN   = #{partnerChargeYn}
      ,LOGIN_YN   = #{loginYn}
<!-- 
      ,CHARGE_BUSINESS_CODE = #{chargeBusinessCode}
      ,TPLUS_CHARGE_BUSINESS_CODE = #{tplusChargeBusinessCode}
-->
      ,LAST_MOD_TS        = now()
      ,LAST_CORT_ID       = #{lastCortId}
 WHERE USER_ID = #{userId}
</update>

<update id="userInfoReload" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
UPDATE TB_USER
   SET LAST_MOD_TS = now()
</update>

<insert id="userInsertProc" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
  INSERT INTO TB_USER (
    USER_ID
        ,USER_NM
        ,EMPLOYEE_NUMBER
        ,USER_DEPT_CODE
        ,USER_GROUP_CODE
        ,USING_YN
        ,AGENT_ID
        ,INNER_NUM
        ,MANAGER_YN
        ,WORK_YN
        ,COMPANY_GBN
        ,CHARGE_BUSINESS_CODE
        ,FRST_REG_TS
        ,FRST_REGR_ID
        ,LAST_MOD_TS
        ,LAST_CORT_ID
  )
  VALUES (
      #{userId}
    , #{userNm}
    ,'0000'
<!--         , #{employeeNumber} -->
        , #{userDeptCode}
        , #{userGroupCode}
        , "Y"
        , #{agentId}
        , #{innerNum}
        , #{managerYn}
        , #{workYn}
        , #{companyGbn}
        , #{chargeBusinessCode}
    , now()
    ,#{lastCortId}
<!--         , #{frstRegrId} -->
    , now()
    ,#{lastCortId}
<!--         , #{lastCortId} -->
  )
</insert>

<select id="getUserDetail" resultMap="userListVO" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
SELECT USER_ID
      ,USER_NM
      ,EMPLOYEE_NUMBER
      ,USER_DEPT_CODE
      ,USER_GROUP_CODE
      ,USING_YN
      ,LOGIN_YN
      ,AGENT_ID
      ,INNER_NUM
      ,MANAGER_YN
      ,(case when WORK_YN = 'Y' then 'Y' else 'N' end) AS WORK_YN
      ,COMPANY_GBN
      ,CHARGE_BUSINESS_CODE
      ,TPLUS_CHARGE_BUSINESS_CODE
      ,FRST_REG_TS
      ,FRST_REGR_ID
      ,LAST_MOD_TS
      ,LAST_CORT_ID
      ,(case when PARTNER_CHARGE_YN = 'Y' then 'Y' else 'N' end) AS PARTNER_CHARGE_YN
      ,(SELECT COUNT(*) 
          FROM TB_TRANSFER IT
         WHERE IT.TRANSFER_PROC_USER_ID = A.USER_ID
           AND IT.TRANSFER_RESULT_CODE != '06'
           AND IT.FRST_REGR_ID != 'ADMIN'
           AND IT.TRANSFER_SNO = IT.LAST_TRANSFER_SNO
       ) + 
       (SELECT COUNT(*) 
          FROM TB_TRANSFER IT
         WHERE IT.TRANSFER_REG_USER_ID = A.USER_ID
           AND IT.TRANSFER_RESULT_CODE != '06'
           AND IT.FRST_REGR_ID != 'ADMIN'
           AND IT.TRANSFER_SNO = IT.LAST_TRANSFER_SNO
       ) AS TRANSFER_CNT
  FROM TB_USER A
 WHERE USER_ID = #{userId}
</select>

<!--   <select id="getNoticeCnt" resultType="int"> -->
<!--     SELECT  COUNT(*) AS TOT_COUNT -->
<!--     FROM   SAMPLE_NOTICE -->
<!--   </select>  -->

<!--   <select id="getNoticeMax" resultType="java.lang.String"> -->
<!--     SELECT  IFNULL(MAX(NO),0)+1 AS MAX_COUNT -->
<!--     FROM   SAMPLE_NOTICE -->
<!--   </select>    -->

<!--   <select id="getNoticeList"  resultMap="noticeVO" parameterType="com.offact.addys.vo.SampleNoticeVO" > -->
<!--   SELECT A.* -->
<!--   FROM -->
<!--   ( -->
<!--       SELECT -->
<!--                @ROWNUM := @ROWNUM + 1 AS ROWNUM -->
<!--              , A.NO -->
<!--              , A.TITLE -->
<!--              , A.WRITER -->
<!--              , DATE_FORMAT(A.REG_DT,'%Y-%m-%d') REG_DT -->
<!--              , DATE_FORMAT(A.MOD_DT,'%Y-%m-%d') MOD_DT -->
<!--       FROM -->
<!--              SAMPLE_NOTICE A, -->
<!--              (SELECT @ROWNUM := 0) R -->
<!--       ORDER BY A.NO DESC -->
<!--   ) A -->
<!--   WHERE  A.ROWNUM BETWEEN (#{curPage}-1) * #{rowCount}+1 AND #{curPage} * #{rowCount} -->
<!--   </select>   -->

<!--     <insert id="insertNotice" parameterType="com.offact.addys.vo.SampleNoticeVO" > -->
<!--     INSERT INTO SAMPLE_NOTICE ( -->
<!--         NO -->
<!--       , TITLE -->
<!--       , CONTENTS -->
<!--       , WRITER -->
<!--       , REG_DT -->
<!--       , MOD_DT -->
<!--     ) -->
<!--     VALUES ( -->
<!--         #{no} -->
<!--       , #{title} -->
<!--       , #{contents} -->
<!--       , #{writer} -->
<!--       , now() -->
<!--       , now() -->
<!--     ) -->
<!--     </insert>   -->

<!--     <update id="modifyNotice" parameterType="com.offact.addys.vo.SampleNoticeVO" > -->
<!--     UPDATE SAMPLE_NOTICE -->
<!--     SET  WRITER     = #{writer} -->
<!--          , TITLE        = #{title} -->
<!--          , CONTENTS = #{contents} -->
<!--          , MOD_DT    = now() -->
<!--     WHERE NO = #{no} -->
<!--     </update>     -->

<!--   <delete id="deleteNotice" parameterType="com.offact.addys.vo.SampleNoticeVO" > -->
<!--     DELETE FROM SAMPLE_NOTICE -->
<!--     WHERE NO = #{no} -->
<!--   </delete>     -->


<select id="getUserCntLDAP" resultType="int" parameterType="com.offact.addys.vo.UserVO" >
SELECT COUNT(*) AS USER_CNT
  FROM TB_USER
 WHERE USER_ID =  #{userId}
</select>

<select id="getUserChkLDAP" resultMap="userListVO" parameterType="com.offact.addys.vo.UserVO" >
SELECT *
  FROM TB_USER
 WHERE USER_ID =  #{userId}
</select>


<update id="setUserInfoFromLdapFirstSet" parameterType="com.offact.addys.vo.UserVO">
UPDATE TB_USER
   SET LDAP_MERGE_YN = 'N'
</update>

<update id="setUserInfoFromLdapUpdate" parameterType="com.offact.addys.vo.UserVO" >
UPDATE TB_USER
   SET USER_NM          = #{userNm}
      ,USER_DEPT_CODE   = #{userDeptCode}
      ,USER_GROUP_CODE  = #{userGroupCode}
      ,COMPANY_GBN      = #{companyGbn}
      ,INNER_NUM        = #{innerNum}
      ,AGENT_ID         = #{agentId}
      ,USING_YN         = #{usingYn}
      ,LAST_MOD_TS      = now()
      ,LAST_CORT_ID     = #{lastCortId}
      ,LDAP_MERGE_YN    = 'Y'
 WHERE USER_ID =  #{userId}
</update>

<insert id="setUserInfoFromLdapInsert" parameterType="com.offact.addys.vo.UserVO" >
INSERT INTO TB_USER
      (
       USER_ID
      ,USER_NM
      ,EMPLOYEE_NUMBER
      ,USER_DEPT_CODE
      ,USER_GROUP_CODE
      ,COMPANY_GBN
      ,INNER_NUM
      ,AGENT_ID
      ,USING_YN
      ,LDAP_MERGE_YN
      ,FRST_REG_TS
      ,FRST_REGR_ID
      ,LAST_MOD_TS
      ,LAST_CORT_ID
      )
VALUES(
       #{userId}
      ,#{userNm}
      ,'0000'
      ,#{userDeptCode}
      ,#{userGroupCode}
      ,#{companyGbn}
      ,#{innerNum}
      ,#{agentId}
      ,#{usingYn}
      ,"Y"
      , now()
      ,#{lastCortId}
      , now()
      ,#{lastCortId}
      )
</insert>


<update id="setUserInfoFromLdapAuthCut" parameterType="com.offact.addys.vo.ad.ADUserAuthListVO" >
UPDATE TB_USER_AUTH TT
   SET TT.LAST_MOD_TS = NOW()
      ,TT.LAST_CORT_ID = #{session_userId}
      ,TT.VALID_TO_DT = DATE_FORMAT(#{validFromDt}, '%Y%m%d%H%i%s')
 WHERE (TT.USER_DEPT_CODE
       ,TT.USER_ID
       ,TT.FUNC_AUTH_CODE
       ,TT.VALID_FROM_DT
       ) IN (
        SELECT * FROM (
        SELECT T1.USER_DEPT_CODE
              ,T1.USER_ID
              ,T1.FUNC_AUTH_CODE
              ,T1.VALID_FROM_DT
          FROM TB_USER_AUTH T1
         WHERE T1.USER_DEPT_CODE = #{userDeptCode}
           AND T1.USER_ID = #{userId}
           AND DATE_FORMAT(#{validFromDt}, '%Y%m%d%H%i%s') BETWEEN T1.VALID_FROM_DT AND T1.VALID_TO_DT
        ) BASE
       )
</update>

<insert id="setUserInfoFromLdapAuthInsert" parameterType="com.offact.addys.vo.ad.ADUserAuthListVO" >
INSERT INTO TB_USER_AUTH (
       USER_DEPT_CODE
      ,FUNC_AUTH_CODE
      ,USER_ID
      ,VALID_FROM_DT
      ,VALID_TO_DT
      ,AUTH_YN
      ,FRST_REG_TS
      ,FRST_REGR_ID
      ,LAST_MOD_TS
      ,LAST_CORT_ID
      )
SELECT TGA.USER_DEPT_CODE
      ,TGA.FUNC_AUTH_CODE
      ,TU.USER_ID
      ,DATE_FORMAT(#{validToDt}, '%Y%m%d%H%i%s') AS VALID_FROM_DT
      ,DATE_FORMAT('99991231235959', '%Y%m%d%H%i%s') AS VALID_TO_DT
      ,(CASE WHEN TU.USING_YN = 'Y' THEN 'Y' ELSE 'N' END) AS AUTH_YN
      ,NOW() AS FRST_REG_TS
      ,#{session_userId} AS FRST_REGR_ID
      ,NOW() AS LAST_MOD_TS
      ,#{session_userId} AS LAST_CORT_ID
  FROM TB_GROUP_AUTH TGA
       INNER JOIN TB_USER TU
          ON (    TGA.USER_DEPT_CODE  = TU.USER_DEPT_CODE
              AND TGA.USER_GROUP_CODE = TU.USER_GROUP_CODE
              AND TU.USER_ID = #{userId}
              AND TGA.AUTH_YN = 'Y'
             )
</insert>

<update id="transferSendRollBack" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
UPDATE TB_TRANSFER A
   SET TRANSFER_REG_USER_ID = #{con_userId} #관리자
 WHERE TRANSFER_SNO = LAST_TRANSFER_SNO
   AND TRANSFER_RESULT_CODE != '06'
   AND TRANSFER_REG_USER_ID = #{userId} #퇴사자
   AND FRST_REGR_ID != 'ADMIN'              #고정값
</update>

<select id="transferReceiveRollBackSearch" resultMap="transferVO" parameterType="com.offact.addys.vo.ad.ADUserListManageVO" >
SELECT A.CRT_NO                                 AS CRT_NO
      ,A.TRANSFER_SNO                           AS ORIGINAL_TRANSFER_SNO
      ,A.CUSTOMER_ID                            AS CUSTOMER_ID
      ,A.CUSTOMER_NM                            AS CUSTOMER_NM
      ,A.PARTNER_ID                             AS PARTNER_ID
      ,A.PARTNER_NM                             AS PARTNER_NM
      ,A.DEAL_ID                                AS DEAL_ID
      ,A.DEAL_NM                                AS DEAL_NM
      ,A.TRANSFER_PROC_USER_ID                  AS TRANSFER_REG_USER_ID
      ,#{con_userId}                            AS TRANSFER_PROC_USER_ID
      ,A.TRANSFER_REQ_TITLE                     AS TRANSFER_REQ_TITLE
      ,A.TRANSFER_TREAT_CONTENTS                AS TRANSFER_TREAT_CONTENTS
      ,A.URGENT_YN                              AS URGENT_YN
  FROM TB_TRANSFER A
 WHERE TRANSFER_SNO = LAST_TRANSFER_SNO
   AND TRANSFER_RESULT_CODE != '06'
   AND TRANSFER_PROC_USER_ID = #{userId}
</select>

<insert id="transferReceiveRollBackInsert" parameterType="com.offact.addys.vo.ad.ADTransferHistoryVO" >
INSERT INTO TB_TRANSFER (
                         CRT_NO
                        ,ORIGINAL_TRANSFER_SNO
                        ,OTHER_DEPT_TRANSFER_YN
                        ,CUSTOMER_ID
                        ,CUSTOMER_NM
                        ,PARTNER_ID
                        ,PARTNER_NM
                        ,DEAL_ID
                        ,DEAL_NM
                        ,ASSIGN_TIME
                        ,COMPLETE_TIME
                        ,ELAPSE_TIME
                        ,TOTAL_HANDLE_TIME
                        ,TRANSFER_RESULT_CODE
                        ,TRANSFER_REG_USER_ID
                        ,TRANSFER_PROC_USER_ID
                        ,TRANSFER_REQ_TITLE
                        ,TRANSFER_TREAT_CONTENTS
                        ,URGENT_YN
                        ,FRST_REG_TS
                        ,FRST_REGR_ID
                        ,LAST_MOD_TS
                        ,LAST_CORT_ID
                        )
                  VALUES(
                         #{crtNo}
                        ,#{originalTransferSno}
                        ,'N'
                        ,#{customerId}
                        ,#{customerNm}
                        ,#{partnerId}
                        ,#{partnerNm}
                        ,#{dealId}
                        ,#{dealNm}
                        ,now()
                        ,NULL
                        ,NULL
                        ,NULL
                        ,'03'
                        ,#{transferRegUserId}
                        ,#{transferProcUserId}
                        ,#{transferReqTitle}
                        ,#{transferTreatContents}
                        ,#{urgentYn}
                        ,now()
                        ,'ADMIN'
                        ,now()
                        ,'ADMIN'
                        )
        <selectKey keyProperty="lastTransferSno" resultType="String" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
</insert>

<update id="transferReceiveRollBackUpdate" parameterType="com.offact.addys.vo.ad.ADTransferHistoryVO" >
UPDATE TB_TRANSFER 
   SET LAST_TRANSFER_SNO = #{lastTransferSno}
      ,LAST_TRANSFER_RESULT_CODE = '03'
      ,LAST_MOD_TS  = now()
      ,LAST_CORT_ID = #{lastCortId}
 WHERE CRT_NO = #{crtNo}
</update>

</mapper>
